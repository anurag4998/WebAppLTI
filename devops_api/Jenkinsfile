pipeline {
    agent any
    stages {
        stage('Build') { 
            steps {
                script {
                  // Checkout the repository and save the resulting metadata
                  def scmVars = checkout scm

                  // Display the variable using scmVars
                  echo "scmVars.GIT_COMMIT"
                  echo "${scmVars.GIT_COMMIT}"

                  // Displaying the variables saving it as environment variable
                  env.GIT_COMMIT = scmVars.GIT_COMMIT
                  echo "env.GIT_COMMIT"
                  echo "${env.GIT_COMMIT}"
                }
                sh 'cd devops_api && dotnet restore'
                sh 'cd devops_api && dotnet build'
                sh 'cd devops_api && dotnet publish -o site'
                sh 'cd devops_api/site && zip ../site.zip *'
                sh 'cd devops_api && zip deploymentpackage.zip site.zip aws-windows-deployment-manifest.json'
            }
        }
        stage('Deploy to EB'){
            steps{
                step([$class: 'AWSEBDeploymentBuilder',
                    credentialId: 'IAMuserLTI',
                    awsRegion: 'ap-south-1',
                    maxAttempts: 30,
                    applicationName: 'dotnetserverdev',
                    environmentName: 'Dotnetserverdev-env',
                    rootObject: 'devops_api/deploymentpackage.zip',
                    versionLabelFormat: '${GIT_COMMIT}-${BUILD_TAG}',
                    sleepTime: 90,
                    checkHealth: true
                ])
            }
        }
        // stage("Commit changes back to production repo"){
        //     steps{
        //         sh 'git checkout --track origin/dev'
        //         sh 'git checkout --track origin/master'
        //         sh 'git merge dev'
        //         withCredentials([usernamePassword(credentialsId: '3abcc784-22bb-4e05-b6a8-b230ae6fbbf9', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
        //             sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vineetb95/TryAtJenkins' )
        //         }
        //     }
        // }
    }
    post {
    // Clean after build
        always {
            cleanWs()
        }
    }
}
